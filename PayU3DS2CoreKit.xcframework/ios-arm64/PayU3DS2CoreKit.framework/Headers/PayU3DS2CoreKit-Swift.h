#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.7.2 (swiftlang-5.7.2.135.5 clang-1400.0.29.51)
#ifndef PAYU3DS2COREKIT_SWIFT_H
#define PAYU3DS2COREKIT_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wduplicate-method-match"
#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT noexcept
#endif
#else
#if !defined(SWIFT_NOEXCEPT)
# define SWIFT_NOEXCEPT 
#endif
#endif
#if defined(__cplusplus)
#if !defined(SWIFT_CXX_INT_DEFINED)
#define SWIFT_CXX_INT_DEFINED
namespace swift {
using Int = ptrdiff_t;
using UInt = size_t;
}
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import QuartzCore;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="PayU3DS2CoreKit",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
typedef SWIFT_ENUM(NSInteger, ACSUITypeInt, open) {
  ACSUITypeIntError = -1,
  ACSUITypeIntUnknown = 0,
  ACSUITypeIntText = 1,
  ACSUITypeIntSingleSelect = 2,
  ACSUITypeIntMultiSelect = 3,
  ACSUITypeIntOob = 4,
  ACSUITypeIntHtml = 5,
};

@class NSString;

/// ACS Rendering Type contains information about the rendering type that
/// ACS is sending fro the cardholder authentication.
SWIFT_CLASS("_TtC15PayU3DS2CoreKit16AcsRenderingType")
@interface AcsRenderingType : NSObject
@property (nonatomic, copy) NSString * _Nullable acsInterface;
@property (nonatomic, copy) NSString * _Nullable acsUiTemplate;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15PayU3DS2CoreKit31AuthenticationRequestParameters")
@interface AuthenticationRequestParameters : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull sdkTransactionID;
@property (nonatomic, readonly, copy) NSString * _Nonnull deviceData;
@property (nonatomic, readonly, copy) NSString * _Nonnull sdkAppID;
@property (nonatomic, readonly, copy) NSString * _Nonnull sdkReferenceNumber;
@property (nonatomic, readonly, copy) NSString * _Nonnull messageVersion;
- (NSString * _Nonnull)getDeviceData SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getSDKTransactionID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getSDKReferenceNumber SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getSDKAppID SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC15PayU3DS2CoreKit13Customization")
@interface Customization : NSObject
- (void)setTextFontName:(NSString * _Nonnull)fontName;
- (void)setTextColor:(NSString * _Nonnull)hexColorCode;
- (void)setTextFontSize:(NSInteger)fontSize;
- (NSString * _Nonnull)getTextFontName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getTextColor SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getTextFontSize SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15PayU3DS2CoreKit19ButtonCustomization")
@interface ButtonCustomization : Customization
@property (nonatomic, copy) NSString * _Nullable backgroundColor;
@property (nonatomic) NSInteger cornerRadius;
@end



/// The ChallengeParameters class shall hold the parameters that are required to conduct the challenge process.
SWIFT_CLASS("_TtC15PayU3DS2CoreKit19ChallengeParameters")
@interface ChallengeParameters : NSObject
@property (nonatomic, copy) NSString * _Nullable a3DSServerTransactionID;
@property (nonatomic, copy) NSString * _Nullable acsTransactionID;
@property (nonatomic, copy) NSString * _Nullable acsRefNumber;
@property (nonatomic, copy) NSString * _Nullable acsSignedContent;
@property (nonatomic, copy) NSString * _Nullable threeDSServerTransactionID;
@property (nonatomic, copy) NSString * _Nullable threeDSRequestorAppURL;
/// Initializing ChallengeParameters with all the required parameters
/// \param a3DSServerTransactionID Transaction identifier assigned by the 3DS Server to uniquely identify a single transaction
///
/// \param acsTransactionID Transaction ID assigned by the ACS to uniquely identify a single transaction
///
/// \param acsRefNumber EMVCo assigns the ACS this identifier after running the EMV 3-D Secure Testing and Approvals process on the ACS
///
/// \param acsSignedContent ACS signed content. This data includes the ACS URL, ACS ephemeral public key, and SDK ephemeral public key
///
- (nonnull instancetype)initWithA3DSServerTransactionID:(NSString * _Nullable)a3DSServerTransactionID acsTransactionID:(NSString * _Nullable)acsTransactionID acsRefNumber:(NSString * _Nullable)acsRefNumber acsSignedContent:(NSString * _Nullable)acsSignedContent threeDSServerTransactionID:(NSString * _Nullable)threeDSServerTransactionID threeDSRequestorAppURL:(NSString * _Nullable)threeDSRequestorAppURL acsRenderingType:(enum ACSUITypeInt)acsRenderingType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class CompletionEvent;
@class ProtocolErrorEvent;
@class RuntimeErrorEvent;

SWIFT_PROTOCOL("_TtP15PayU3DS2CoreKit23ChallengeStatusReceiver_")
@protocol ChallengeStatusReceiver
- (void)completed:(CompletionEvent * _Null_unspecified)e;
- (void)cancelled;
- (void)timedout;
- (void)protocolError:(ProtocolErrorEvent * _Null_unspecified)e;
- (void)runtimeError:(RuntimeErrorEvent * _Null_unspecified)e;
@end


SWIFT_CLASS("_TtC15PayU3DS2CoreKit15CompletionEvent")
@interface CompletionEvent : NSObject
@property (nonatomic, copy) NSString * _Nonnull sdkTransactionID;
@property (nonatomic, copy) NSString * _Nonnull transactionStatus;
- (nonnull instancetype)initWithSdkTransactionID:(NSString * _Nonnull)sdkTransactionID transactionStatus:(NSString * _Nonnull)transactionStatus OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getSDKTransactionID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getTransactionStatus SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15PayU3DS2CoreKit16ConfigParameters")
@interface ConfigParameters : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, NSDictionary<NSString *, NSString *> *> * _Nonnull params;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (BOOL)addParam:(NSString * _Nullable)group paramName:(NSString * _Nullable)paramName paramValue:(NSString * _Nullable)paramValue error:(NSError * _Nullable * _Nullable)error;
- (NSString * _Nullable)getParamValue:(NSString * _Nullable)group :(NSString * _Nullable)paramName error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)removeParam:(NSString * _Nullable)group :(NSString * _Nullable)paramName error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


@interface ConfigParameters (SWIFT_EXTENSION(PayU3DS2CoreKit))
- (void)setAutoSubmitEnable:(BOOL)isAutoSubmitEnabled;
- (void)setMinOtpLength:(NSInteger)otpLength;
- (void)setTransactionId:(NSString * _Nonnull)txnId;
- (void)setKeyboardType:(UIKeyboardType)keyboardType;
- (void)setCustomDialogLoader:(BOOL)useCustomLoader :(NSString * _Nonnull)color;
- (void)setResendOTPAllowCount:(NSInteger)count;
@end



SWIFT_CLASS("_TtC15PayU3DS2CoreKit12ErrorMessage")
@interface ErrorMessage : NSObject
@property (nonatomic, copy) NSString * _Nonnull threeDSServerTransID;
@property (nonatomic, copy) NSString * _Nonnull errorCode;
@property (nonatomic, copy) NSString * _Nonnull errorDescription;
@property (nonatomic, copy) NSString * _Nullable errorDetail;
@property (nonatomic, copy) NSString * _Nullable acsTransID;
@property (nonatomic, copy) NSString * _Nullable errorComponent;
@property (nonatomic, copy) NSString * _Nullable errorMessageType;
@property (nonatomic, copy) NSString * _Nullable messageType;
@property (nonatomic, copy) NSString * _Nullable messageVersion;
@property (nonatomic, copy) NSString * _Nullable sdkTransID;
- (nonnull instancetype)init:(NSString * _Nonnull)transactionID :(NSString * _Nonnull)errorCode :(NSString * _Nonnull)errorDescription :(NSString * _Nullable)errorDetail OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getTransactionID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getErrorCode SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getErrorDescription SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getErrorDetails SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP15PayU3DS2CoreKit17ExceptionReceiver_")
@protocol ExceptionReceiver
- (void)didReceiveInvalidInputException:(NSString * _Nonnull)message;
- (void)didReceiveInvalidAcsUITypeException:(NSString * _Nonnull)acsUIType;
@end


SWIFT_CLASS("_TtC15PayU3DS2CoreKit23FontFamilyCustomization")
@interface FontFamilyCustomization : NSObject
@property (nonatomic, copy) NSString * _Nonnull headerFontFamilyName;
@property (nonatomic, copy) NSString * _Nonnull textFontFamilyName;
- (void)setHeaderFontFamily:(NSString * _Nonnull)fontName;
- (NSString * _Nonnull)getHeadingTextFontName SWIFT_WARN_UNUSED_RESULT;
- (void)setTextFontFamily:(NSString * _Nonnull)fontName;
- (NSString * _Nonnull)getTextFontFamily SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@protocol SDKChallengeProtocol;

SWIFT_PROTOCOL("_TtP15PayU3DS2CoreKit24GenericChallengeProtocol_")
@protocol GenericChallengeProtocol
- (void)clickVerifyButton;
- (NSString * _Nonnull)getChallengeType SWIFT_WARN_UNUSED_RESULT;
- (void)clickCancelButton;
- (void)setChallengeProtocolWithSdkChallengeProtocol:(id <SDKChallengeProtocol> _Nonnull)sdkChallengeProtocol;
/// <p> Callback to notify the SDK to expand all text areas before RefApp takes a screenshot
/// for Visual Test Cases. </p>
/// *
- (void)expandTextsBeforeScreenshot;
/// <p> Callback to select the whitelist checkbox </p>
/// *
- (void)selectWhitelistCheckedWithChecked:(BOOL)checked;
/// <p> Callback to notify the SDK to rotate the screen to lanscape orientation in order to
/// execute the test case. </p>
/// This function should simulate the device rotation changing screen to landscape
/// paramenter true when the test case should be executed in landscape
/// *
- (void)setLandscapeOrientationWithLandscapeOrientation:(BOOL)landscapeOrientation;
@end


SWIFT_CLASS("_TtC15PayU3DS2CoreKit16RuntimeException")
@interface RuntimeException : NSObject
- (nonnull instancetype)initWithMessage:(NSString * _Nonnull)message cause:(NSString * _Nullable)cause OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)getMessage SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC15PayU3DS2CoreKit21InvalidInputException")
@interface InvalidInputException : RuntimeException
- (nonnull instancetype)initWithMessage:(NSString * _Nonnull)message cause:(NSString * _Nullable)cause OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15PayU3DS2CoreKit18LabelCustomization")
@interface LabelCustomization : Customization
@property (nonatomic, readonly, copy) NSString * _Nullable headingTxtColor;
@property (nonatomic, readonly, copy) NSString * _Nonnull headingTxtFontName;
@property (nonatomic, readonly) NSInteger headingTxtFontSize;
- (nonnull instancetype)initWithHeadingTxtFontName:(NSString * _Nonnull)headingTxtFontName headingTxtColor:(NSString * _Nullable)headingTxtColor headingTxtFontSize:(NSInteger)headingTxtFontSize OBJC_DESIGNATED_INITIALIZER;
- (void)setHeadingTextFontName:(NSString * _Nonnull)fontName;
- (void)setHeadingTextColor:(NSString * _Nonnull)hexColorCode;
- (void)setHeadingTextFontSize:(NSInteger)fontSize;
- (NSString * _Nonnull)getHeadingTextFontName SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getHeadingTextColor SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getHeadingTextFontSize SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP15PayU3DS2CoreKit10LogHandler_")
@protocol LogHandler
- (void)logClevertapEventWithEventName:(NSString * _Nonnull)eventName;
- (void)logKibanaEventWithEventJson:(NSDictionary<NSString *, id> * _Nonnull)eventJson;
@end


SWIFT_PROTOCOL("_TtP15PayU3DS2CoreKit28MultiSelectChallengeProtocol_")
@protocol MultiSelectChallengeProtocol <GenericChallengeProtocol>
- (void)selectIndex:(NSInteger)index;
@end



SWIFT_PROTOCOL("_TtP15PayU3DS2CoreKit26OutOfBandChallengeProtocol_")
@protocol OutOfBandChallengeProtocol <GenericChallengeProtocol>
@end


SWIFT_CLASS("_TtC15PayU3DS2CoreKit4PArs")
@interface PArs : NSObject
@property (nonatomic, copy) NSString * _Nullable p_messageVersion;
@property (nonatomic, copy) NSString * _Nullable threeDSServerTransID;
@property (nonatomic, copy) NSString * _Nullable threeDSServerRefNumber;
@property (nonatomic, copy) NSString * _Nullable acsTransID;
@property (nonatomic, copy) NSString * _Nullable acsEphemPubKey;
@property (nonatomic, copy) NSString * _Nullable acsReferenceNumber;
@property (nonatomic, copy) NSString * _Nullable authenticationValue;
@property (nonatomic, copy) NSString * _Nullable dsReferenceNumber;
@property (nonatomic, copy) NSString * _Nullable dsTransID;
@property (nonatomic, copy) NSString * _Nullable sdkTransID;
@property (nonatomic, copy) NSString * _Nullable eci;
@property (nonatomic, copy) NSString * _Nullable messageType;
@property (nonatomic, copy) NSString * _Nullable transStatus;
@property (nonatomic, strong) AcsRenderingType * _Nullable acsRenderingType;
@property (nonatomic, copy) NSString * _Nullable acsSignedContent;
@property (nonatomic, copy) NSString * _Nullable acsURL;
@property (nonatomic, copy) NSString * _Nullable authenticationType;
@property (nonatomic, copy) NSString * _Nullable acschallengeMandated;
@property (nonatomic, copy) NSString * _Nullable transStatusReason;
@property (nonatomic, copy) NSString * _Nullable errorMessageType;
@property (nonatomic, copy) NSString * _Nullable errorDescription;
@property (nonatomic, copy) NSString * _Nullable errorCode;
@property (nonatomic, copy) NSString * _Nullable errorComponent;
@property (nonatomic, copy) NSString * _Nullable errorDetail;
@property (nonatomic, copy) NSString * _Nullable messageVersion;
- (nonnull instancetype)initWithBuild:(SWIFT_NOESCAPE void (^ _Nonnull)(PArs * _Nonnull))build OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithJson:(NSDictionary<NSString *, id> * _Nonnull)json error:(NSError * _Nullable * _Nullable)error OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSCoder;
@class UITouch;
@class UIEvent;

SWIFT_CLASS("_TtC15PayU3DS2CoreKit12PayUBaseView")
@interface PayUBaseView : UIView
@property (nonatomic, copy) void (^ _Nullable onViewDismissed)(void);
@property (nonatomic, copy) void (^ _Nullable onHeightChanged)(CGFloat);
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
@end


SWIFT_CLASS("_TtC15PayU3DS2CoreKit14PayULoaderView")
@interface PayULoaderView : PayUBaseView
- (void)updateDescriptionMessage:(NSString * _Nonnull)message;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER;
@end


IB_DESIGNABLE
SWIFT_CLASS("_TtC15PayU3DS2CoreKit12PayULogoView")
@interface PayULogoView : UIView <CAAnimationDelegate>
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class CAAnimation;

@interface PayULogoView (SWIFT_EXTENSION(PayU3DS2CoreKit))
- (void)animationDidStop:(CAAnimation * _Nonnull)anim finished:(BOOL)flag;
@end




SWIFT_CLASS("_TtC15PayU3DS2CoreKit14ProgressDialog")
@interface ProgressDialog : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)start;
- (void)stop;
@end


/// A protocol error is any error message that is returned by the ACS or
/// an error message that is generated by the 3DS SDK to be returned to the ACS
SWIFT_CLASS("_TtC15PayU3DS2CoreKit18ProtocolErrorEvent")
@interface ProtocolErrorEvent : NSObject
@property (nonatomic, copy) NSString * _Nonnull sdkTransactionID;
@property (nonatomic, strong) ErrorMessage * _Nonnull errorMessage;
/// The ProtocolErrorEvent constructor shall create an object with the specified inputs
/// \param sdkTransactionID SDK Transaction ID
///
/// \param errorMessage Error message
///
- (nonnull instancetype)init:(NSString * _Nonnull)sdkTransactionID :(ErrorMessage * _Nonnull)errorMessage OBJC_DESIGNATED_INITIALIZER;
/// Returns the error message
- (NSString * _Nonnull)getErrorMessage SWIFT_WARN_UNUSED_RESULT;
/// Returns the SDK Transaction ID
- (NSString * _Nonnull)getSDKTransactionID SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// The RuntimeErrorEvent class shall hold details of run-time
/// errors that are encountered by the 3DS SDK during authentication
SWIFT_CLASS("_TtC15PayU3DS2CoreKit17RuntimeErrorEvent")
@interface RuntimeErrorEvent : NSObject
@property (nonatomic, copy) NSString * _Nullable errorCode;
@property (nonatomic, copy) NSString * _Nonnull errorMessage;
/// Constructs a RuntimeErrorEvent object
/// \param errorCode Specific error code, i.e not mandatory
///
/// \param errorMessage Error message
///
- (nonnull instancetype)init:(NSString * _Nullable)errorCode :(NSString * _Nonnull)errorMessage OBJC_DESIGNATED_INITIALIZER;
/// Returns details about the error
- (NSString * _Nonnull)getErrorMessage SWIFT_WARN_UNUSED_RESULT;
/// /// Returns the implementer-specific error code
- (NSString * _Nullable)getErrorCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end



SWIFT_CLASS("_TtC15PayU3DS2CoreKit30SDKAlreadyInitializedException")
@interface SDKAlreadyInitializedException : RuntimeException
- (nonnull instancetype)initWithMessage:(NSString * _Nonnull)message cause:(NSString * _Nullable)cause OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP15PayU3DS2CoreKit20SDKChallengeProtocol_")
@protocol SDKChallengeProtocol
- (void)handleChallenge;
@end


SWIFT_CLASS("_TtC15PayU3DS2CoreKit26SDKNotInitializedException")
@interface SDKNotInitializedException : RuntimeException
- (nonnull instancetype)initWithMessage:(NSString * _Nonnull)message cause:(NSString * _Nullable)cause OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC15PayU3DS2CoreKit19SDKRuntimeException")
@interface SDKRuntimeException : RuntimeException
- (nonnull instancetype)initWithMessage:(NSString * _Nonnull)message errorCode:(NSString * _Nullable)errorCode cause:(NSString * _Nullable)cause OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nullable)getErrorCode SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithMessage:(NSString * _Nonnull)message cause:(NSString * _Nullable)cause SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP15PayU3DS2CoreKit31SingleSelectorChallengeProtocol_")
@protocol SingleSelectorChallengeProtocol <GenericChallengeProtocol>
- (void)selectObject:(NSInteger)index;
@end


SWIFT_CLASS("_TtC15PayU3DS2CoreKit20TextBoxCustomization")
@interface TextBoxCustomization : Customization
- (nonnull instancetype)initWithBorderWidth:(NSInteger)borderWidth cornerRadius:(NSInteger)cornerRadius borderColor:(NSString * _Nullable)borderColor OBJC_DESIGNATED_INITIALIZER;
- (void)setBorderWidth:(NSInteger)borderWidth;
- (NSInteger)getBorderWidth SWIFT_WARN_UNUSED_RESULT;
- (void)setBorderColor:(NSString * _Nonnull)hexColorCode;
- (NSString * _Nullable)getBorderColor SWIFT_WARN_UNUSED_RESULT;
- (void)setCornerRadius:(NSInteger)cornerRadius;
- (NSInteger)getCornerRadius SWIFT_WARN_UNUSED_RESULT;
- (void)setPlaceHolderText:(NSString * _Nonnull)placeHolder;
- (NSString * _Nullable)getPlaceHolderText SWIFT_WARN_UNUSED_RESULT;
- (void)setSecureTextField:(BOOL)isSecureTextField;
- (BOOL)getSecureTextField SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP15PayU3DS2CoreKit21TextChallengeProtocol_")
@protocol TextChallengeProtocol <GenericChallengeProtocol>
- (void)typeTextChallengeValue:(NSString * _Nonnull)value;
@end

@class UIApplication;
@class UiCustomization;
@protocol Transaction;
@class Warning;

/// The ThreeDS2Service interface is the main 3DS SDK interface.
/// It provides methods to process transactions.
SWIFT_PROTOCOL("_TtP15PayU3DS2CoreKit15ThreeDS2Service_")
@protocol ThreeDS2Service
/// Initializes the 3DS SDK instance.
- (BOOL)initialize:(UIApplication * _Nullable)application configParameters:(ConfigParameters * _Nullable)configParameters locale:(NSString * _Nullable)locale uiCustomization:(UiCustomization * _Nullable)uiCustomization logHandlerDelegate:(id <LogHandler> _Nonnull)logHandlerDelegate error:(NSError * _Nullable * _Nullable)error;
/// Creates an instance of Transaction through which the 3DS Requestor App gets the data that is required to perform the transaction.
- (id <Transaction> _Nullable)createTransaction:(NSString * _Nonnull)directoryServerID messageVersion:(NSString * _Nullable)messageVersion error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Frees up resources that are used by the 3DS Requestor App until it is closed. It shall be called only once during a single 3DS Requestor App session.
- (BOOL)cleanupAndReturnError:(NSError * _Nullable * _Nullable)error;
/// Returns the version of the 3DS SDK that is integrated with the 3DS Requestor App.
- (NSString * _Nullable)getSDKVersionAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Returns warnings produced by the 3DS SDK while performing security checks during initialization.
- (NSArray<Warning *> * _Nullable)getWarningsAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC15PayU3DS2CoreKit20ToolbarCustomization")
@interface ToolbarCustomization : Customization
@property (nonatomic, copy) NSString * _Nullable backgroundColor;
@property (nonatomic, copy) NSString * _Nullable headerText;
@property (nonatomic, copy) NSString * _Nullable buttonText;
@end


/// An object that implements the Transaction interface shall hold
/// parameters that the 3DS Server requires to create AReq messages and to perform the Challenge Flow.
SWIFT_PROTOCOL("_TtP15PayU3DS2CoreKit11Transaction_")
@protocol Transaction
/// Returns device and 3DS SDK information to the 3DS Requestor App
- (AuthenticationRequestParameters * _Nonnull)getAuthenticationRequestParameters SWIFT_WARN_UNUSED_RESULT;
/// Initiates the challenge process.
- (BOOL)doChallenge:(ChallengeParameters * _Nonnull)challengeParameters challengeStatusReceiver:(id <ChallengeStatusReceiver> _Nonnull)challengeStatusReceiver timeOut:(NSInteger)timeOut error:(NSError * _Nullable * _Nullable)error;
/// Returns an instance of Progress View (processing screen) that the 3DS Requestor App uses.
- (ProgressDialog * _Nullable)getProgressViewAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Cleans up resources that are held by the Transaction object.
- (void)close;
@end









@class UIColor;

@interface UIView (SWIFT_EXTENSION(PayU3DS2CoreKit))
- (void)addPayULogo;
- (void)removePayULogo;
- (void)showPayULoaderWithMessage:(NSString * _Nonnull)message backgroundColor:(UIColor * _Nonnull)backgroundColor alpha:(CGFloat)alpha;
- (void)showPayULoaderWith:(NSString * _Nonnull)message and:(UIColor * _Nonnull)backgroundColor;
- (void)hidePayULoader;
@end


enum ButtonTypeInt : NSInteger;

/// The UiCustomization class shall provide the functionality required
/// to customize the 3DS SDK UI elements. An object of this class holds various UI-related parameters
SWIFT_CLASS("_TtC15PayU3DS2CoreKit15UiCustomization")
@interface UiCustomization : NSObject
@property (nonatomic, readonly, copy) NSDictionary<NSString *, ButtonCustomization *> * _Nullable btnCustomizations;
@property (nonatomic, readonly, strong) ToolbarCustomization * _Nullable tbrCustomization;
@property (nonatomic, readonly, strong) LabelCustomization * _Nullable lblCustomization;
@property (nonatomic, readonly, strong) TextBoxCustomization * _Nullable txtBxCustomization;
@property (nonatomic, readonly, strong) FontFamilyCustomization * _Nullable fontFamilyCustomization;
- (nonnull instancetype)initWithBtnCustomizations:(NSDictionary<NSString *, ButtonCustomization *> * _Nullable)btnCustomizations tbrCustomization:(ToolbarCustomization * _Nullable)tbrCustomization lblCustomization:(LabelCustomization * _Nullable)lblCustomization txtBxCustomization:(TextBoxCustomization * _Nullable)txtBxCustomization fontFamilyCustomization:(FontFamilyCustomization * _Nullable)fontFamilyCustomization OBJC_DESIGNATED_INITIALIZER;
+ (UiCustomization * _Nonnull)customizeUI SWIFT_WARN_UNUSED_RESULT;
/// Sets the attributes of a ButtonCustomization object for an implementer-specific button type.
- (BOOL)setButtonCustomization:(ButtonCustomization * _Nonnull)buttonCustomization :(enum ButtonTypeInt)buttonType error:(NSError * _Nullable * _Nullable)error;
/// Sets the attributes of a ToolbarCustomization object.
- (BOOL)setToolbarCustomization:(ToolbarCustomization * _Nonnull)toolbarCustomization error:(NSError * _Nullable * _Nullable)error;
/// Sets the attributes of a LabelCustomization object.
- (BOOL)setLabelCustomization:(LabelCustomization * _Nonnull)labelCustomization error:(NSError * _Nullable * _Nullable)error;
/// Sets the attributes of a TextBoxCustomization object.
- (BOOL)setTextBoxCustomization:(TextBoxCustomization * _Nonnull)textBoxCustomization error:(NSError * _Nullable * _Nullable)error;
/// Sets the attributes of a FontFamilyCustomization object.
- (BOOL)setFontFamilyCustomization:(FontFamilyCustomization * _Nonnull)fontFamilyCustomization error:(NSError * _Nullable * _Nullable)error;
/// Returns a ButtonCustomization object.
- (ButtonCustomization * _Nullable)getButtonCustomization:(enum ButtonTypeInt)buttonType SWIFT_WARN_UNUSED_RESULT;
/// Returns a ToolbarCustomization object.
- (ToolbarCustomization * _Nullable)getToolbarCustomization SWIFT_WARN_UNUSED_RESULT;
/// Returns a LabelCustomization object.
- (LabelCustomization * _Nullable)getLabelCustomization SWIFT_WARN_UNUSED_RESULT;
/// Returns a TextBoxCustomization object.
- (TextBoxCustomization * _Nullable)getTextBoxCustomization SWIFT_WARN_UNUSED_RESULT;
/// Returns a TextBoxCustomization object.
- (FontFamilyCustomization * _Nullable)getFontFamilyCustomization SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, ButtonTypeInt, open) {
  ButtonTypeIntVERIFY = 0,
  ButtonTypeIntCONTINUE = 1,
  ButtonTypeIntNEXT = 2,
  ButtonTypeIntCANCEL = 3,
  ButtonTypeIntRESEND = 4,
  ButtonTypeIntSUBMIT = 5,
};

enum Severity : NSInteger;

SWIFT_CLASS("_TtC15PayU3DS2CoreKit7Warning")
@interface Warning : NSObject
- (nonnull instancetype)initWithId:(NSString * _Nonnull)id message:(NSString * _Nonnull)message severity:(enum Severity)severity OBJC_DESIGNATED_INITIALIZER;
- (NSString * _Nonnull)getID SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getMessage SWIFT_WARN_UNUSED_RESULT;
- (enum Severity)getSeverity SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, Severity, open) {
  SeverityLOW = 0,
  SeverityMEDIUM = 1,
  SeverityHIGH = 2,
};


@class WKWebView;

SWIFT_PROTOCOL("_TtP15PayU3DS2CoreKit20WebChallengeProtocol_")
@protocol WebChallengeProtocol <GenericChallengeProtocol>
- (WKWebView * _Nonnull)getWebView SWIFT_WARN_UNUSED_RESULT;
@end

@class UIStoryboard;

SWIFT_CLASS("_TtC15PayU3DS2CoreKit8Wibmo3ds")
@interface Wibmo3ds : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) Wibmo3ds * _Nonnull shared;)
+ (Wibmo3ds * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, strong) ConfigParameters * _Nullable configParams;
@property (nonatomic, strong) id <ExceptionReceiver> _Nullable exceptionReceiver;
+ (UIStoryboard * _Nonnull)storyboard SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@interface Wibmo3ds (SWIFT_EXTENSION(PayU3DS2CoreKit))
- (NSDictionary<NSString *, id> * _Nonnull)loggingDictionaryForKibanaWithKey:(NSString * _Nonnull)key value:(NSString * _Nonnull)value className:(NSString * _Nonnull)className txnId:(NSString * _Nullable)txnId SWIFT_WARN_UNUSED_RESULT;
@end




@interface Wibmo3ds (SWIFT_EXTENSION(PayU3DS2CoreKit)) <ThreeDS2Service>
- (BOOL)initialize:(UIApplication * _Nullable)application configParameters:(ConfigParameters * _Nullable)configParameters locale:(NSString * _Nullable)locale uiCustomization:(UiCustomization * _Nullable)uiCustomization logHandlerDelegate:(id <LogHandler> _Nonnull)logHandlerDelegate error:(NSError * _Nullable * _Nullable)error;
- (id <Transaction> _Nullable)createTransaction:(NSString * _Nonnull)directoryServerID messageVersion:(NSString * _Nullable)messageVersion error:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (BOOL)cleanupAndReturnError:(NSError * _Nullable * _Nullable)error;
- (NSString * _Nullable)getSDKVersionAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
- (NSArray<Warning *> * _Nullable)getWarningsAndReturnError:(NSError * _Nullable * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
@end

#endif
#if defined(__cplusplus)
#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
