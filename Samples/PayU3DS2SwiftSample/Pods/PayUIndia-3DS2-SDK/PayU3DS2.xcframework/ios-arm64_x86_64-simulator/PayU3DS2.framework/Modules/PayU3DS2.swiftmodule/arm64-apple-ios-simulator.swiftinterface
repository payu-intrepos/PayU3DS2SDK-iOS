// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.8.1 (swiftlang-5.8.0.124.5 clang-1403.0.22.11.100)
// swift-module-flags: -target arm64-apple-ios11.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name PayU3DS2
// swift-module-flags-ignorable: -enable-bare-slash-regex
import Foundation
@_exported import PayU3DS2
import PayU3DS2CoreKit
import PayUCrashReporter
import PayUNetworkReachability
import Swift
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
@objc public class PayU3DS2TextBoxCustomisation : PayU3DS2.PayU3DS2BaseCustomisation {
  @objc public init(textFontColor: Swift.String?, textFontSize: Swift.Int, textFontFamilyName: Swift.String?, borderColor: Swift.String?, borderWidth: Swift.Int, cornerRadius: Swift.Int)
  @objc deinit
}
@_hasMissingDesignatedInitializers @objc public class PayU3DS2ChallengeParameter : ObjectiveC.NSObject, Swift.Encodable {
  @objc public var acsSignedContent: Swift.String
  @objc public var acsRefNumber: Swift.String
  @objc public var acsTransactionID: Swift.String
  @objc public var threeDSServerTransactionID: Swift.String
  @objc public init(acsSignedContent: Swift.String, acsRefNumber: Swift.String, acsTransactionID: Swift.String, threeDSServerTransactionID: Swift.String)
  @objc deinit
  public func encode(to encoder: any Swift.Encoder) throws
}
@_inheritsConvenienceInitializers @objc public class PayU3DS2BaseConfig : ObjectiveC.NSObject {
  @objc public var isProduction: Swift.Bool
  @objc public var merchantResponseTimeout: Swift.Double
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @objcMembers public class PayU3DS2ValidatorHelper : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class PayU3DS2HashConstants : ObjectiveC.NSObject {
  @objc public static let hashString: Swift.String
  @objc public static let hashType: Swift.String
  @objc public static let hashName: Swift.String
  @objc public static let postSalt: Swift.String
  @objc override dynamic public init()
  @objc deinit
}
@objc public class PayU3DS2LabelCustomisation : PayU3DS2.PayU3DS2BaseCustomisation {
  @objc public init(textFontColor: Swift.String?, textFontSize: Swift.Int, textFontFamilyName: Swift.String?, headingTextColor: Swift.String?, headingTextFontFamilyName: Swift.String?, headingTextFontSize: Swift.Int)
  @objc deinit
}
@objc public enum PayU3DS2ButtonTextCaseType : Swift.Int {
  case lowercase
  case uppercase
  case `default`
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public class PayU3DS2ButtonCustomisation : PayU3DS2.PayU3DS2BaseCustomisation {
  @objc public init(textFontColor: Swift.String?, textFontSize: Swift.Int, textFontFamilyName: Swift.String?, backgroundColor: Swift.String?, cornerRadius: Swift.Int, resendButtonTextFontColor: Swift.String?, textCaseType: PayU3DS2.PayU3DS2ButtonTextCaseType = .default)
  @objc deinit
}
@objc public enum PayU3DS2DeviceSeverity : Swift.Int {
  case low
  case medium
  case high
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public class PayU3DS2DeviceWarning : ObjectiveC.NSObject {
  @objc public var id: Swift.String
  @objc public var message: Swift.String
  @objc public var severity: PayU3DS2.PayU3DS2DeviceSeverity
  @objc public init(id: Swift.String, message: Swift.String, severity: PayU3DS2.PayU3DS2DeviceSeverity)
  @objc deinit
}
@objc public class PayU3DS2BinInfoResponse : ObjectiveC.NSObject, Swift.Codable {
  @objc public var issuingBank: Swift.String?
  @objc public var bin: Swift.String?
  @objc public var category: Swift.String?
  @objc public var cardType: Swift.String?
  @objc public var isDomestic: Swift.String?
  @objc public var isAtmPinCard: Swift.String?
  @objc public var isSiSupported: Swift.Int
  @objc public var isOtpOnTheFly: Swift.Int
  @objc public var messageVersion: Swift.String?
  required public init(from decoder: any Swift.Decoder) throws
  @objc deinit
  public func encode(to encoder: any Swift.Encoder) throws
}
@objc public class PayU3DS2BaseCustomisation : ObjectiveC.NSObject {
  @objc public init(textFontColor: Swift.String?, textFontSize: Swift.Int, textFontFamilyName: Swift.String?)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class PayU3DS2Config : PayU3DS2.PayU3DS2BaseConfig {
  @objc public var fallback3DS1: Swift.Bool
  @objc public var uiCustomisation: PayU3DS2.PayU3DS2UICustomisation?
  @objc public var authenticateOnly: Swift.Bool
  @objc public var autoSubmit: Swift.Bool
  @objc public func setDefaultProgressLoader(showDefaultLoader: Swift.Bool, defaultProgressLoaderColor: Swift.String)
  @objc override dynamic public init()
  @objc deinit
}
@objc public enum PayU3DS2CardScheme : Swift.Int {
  case visa
  case mastercard
  case none
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@objc public class PayU3DS2CardData : ObjectiveC.NSObject {
  @objc public var cardScheme: PayU3DS2.PayU3DS2CardScheme
  @objc public var threeDSVersion: Swift.String
  @objc public init(cardScheme: PayU3DS2.PayU3DS2CardScheme, threeDSVersion: Swift.String)
  @objc deinit
}
public typealias PayU3DS2Completion = (_ response: PayU3DS2.PayU3DS2Response) -> Swift.Void
public typealias PayU3DS2HashGenerationCompletion = (_ hashDict: [Swift.String : Swift.String]) -> Swift.Void
@objc public protocol PayU3DS2BaseDelegate {
  @objc func onError(errorCode: Swift.Int, errorMessage: Swift.String)
}
@objc public protocol PayU3DS2HashDelegate {
  @objc func generateHash(for param: [Swift.String : Swift.String], onCompletion: @escaping PayU3DS2.PayU3DS2HashGenerationCompletion)
}
@objc public protocol PayU3DS2Delegate : PayU3DS2.PayU3DS2BaseDelegate, PayU3DS2.PayU3DS2HashDelegate {
  @objc func onPaymentSuccess(successResponse: Any?)
  @objc func onPaymentFailure(failureResponse: Any?)
  @objc func onPaymentCancel(isTxnInitiated: Swift.Bool)
}
@objc @_inheritsConvenienceInitializers @objcMembers public class PayU3DS2Validator : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
@objc public class PayU3DS2ToolBarCustomisation : PayU3DS2.PayU3DS2BaseCustomisation {
  @objc public init(textFontColor: Swift.String?, textFontSize: Swift.Int, textFontFamilyName: Swift.String?, backgroundColor: Swift.String?, buttonText: Swift.String?, headerText: Swift.String?)
  @objc deinit
}
@objc public class PayU3DS2Response : ObjectiveC.NSObject {
  @objc public var status: Swift.Int
  @objc public var errorMessage: Swift.String?
  @objc public var result: Any?
  @objc public init(status: Swift.Int, errorMessage: Swift.String?, result: Any?)
  @objc public init(status: Swift.Int, result: Any?)
  @objc public init(status: Swift.Int, errorMessage: Swift.String?)
  @objc deinit
}
@objc public class PayU3DS2CardBinInfoRequest : ObjectiveC.NSObject {
  @objc public var cardDetails: Swift.String
  @objc public var isSI: Swift.Bool
  @objc public init(cardDetails: Swift.String, isSI: Swift.Bool)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class PayU3DS2 : ObjectiveC.NSObject {
  @objc public static func initialise(key: Swift.String, requestId: Swift.String, config: PayU3DS2.PayU3DS2Config, completion: @escaping PayU3DS2.PayU3DS2Completion)
  @objc public static func cardBinInfo(cardBinInfoRequest: PayU3DS2.PayU3DS2CardBinInfoRequest, delegate: any PayU3DS2.PayU3DS2HashDelegate, completion: @escaping PayU3DS2.PayU3DS2Completion)
  @objc public static func extractDeviceDetails(cardData: PayU3DS2.PayU3DS2CardData) -> PayU3DS2.PayU3DS2Response
  @objc public static func initiateChallenge(challengeParameter: PayU3DS2.PayU3DS2ChallengeParameter, completion: @escaping PayU3DS2.PayU3DS2Completion)
  @objc public static func initiatePayment(vc: UIKit.UIViewController, config: PayU3DS2.PayU3DS2Config, paymentParams: PayU3DS2.PayU3DS2PaymentParam, delegate: any PayU3DS2.PayU3DS2Delegate)
  @objc public static func clean()
  @objc public static func start()
  @objc override dynamic public init()
  @objc deinit
}
@objc public class PayU3DS2PaymentParam : ObjectiveC.NSObject {
  @objc public var key: Swift.String
  @objc public var transactionId: Swift.String
  @objc public var amount: Swift.String
  @objc public var productInfo: Swift.String
  @objc public var firstName: Swift.String
  @objc public var email: Swift.String
  @objc public var phone: Swift.String
  @objc public var surl: Swift.String
  @objc public var furl: Swift.String
  @objc public var userCredential: Swift.String?
  @objc public var additionalParam: [Swift.String : Any]
  @objc public var udfs: PayU3DS2.PayU3DS2UserDefines?
  @objc public var cardinfo: PayU3DS2.PayU3DS2CardInfo?
  @objc public init(key: Swift.String, transactionId: Swift.String, amount: Swift.String, productInfo: Swift.String, firstName: Swift.String, email: Swift.String, phone: Swift.String, surl: Swift.String, furl: Swift.String)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class PayU3DS2UserDefines : ObjectiveC.NSObject {
  @objc public var udf1: Swift.String?
  @objc public var udf2: Swift.String?
  @objc public var udf3: Swift.String?
  @objc public var udf4: Swift.String?
  @objc public var udf5: Swift.String?
  @objc public var udf6: Swift.String?
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class PayU3DS2CardInfo : ObjectiveC.NSObject {
  @objc public var cardName: Swift.String?
  @objc public var cardAlias: Swift.String?
  @objc public var cardNumber: Swift.String?
  @objc public var expiryMonth: Swift.String?
  @objc public var expiryYear: Swift.String?
  @objc public var cvv: Swift.String?
  @objc public var cardToken: Swift.String?
  @objc public var networkToken: Swift.String?
  @objc public var cardScheme: PayU3DS2.PayU3DS2CardScheme
  @objc override dynamic public init()
  @objc deinit
}
@objc public class PayU3DS2UICustomisation : ObjectiveC.NSObject {
  @objc public init(buttonCustomisation: PayU3DS2.PayU3DS2ButtonCustomisation?, labelCustomisation: PayU3DS2.PayU3DS2LabelCustomisation?, textBoxCustomisation: PayU3DS2.PayU3DS2TextBoxCustomisation?, toolbarCustomisation: PayU3DS2.PayU3DS2ToolBarCustomisation?)
  @objc deinit
}
@objc public class PayU3DS2Params : ObjectiveC.NSObject, Swift.Codable {
  @objc public var sdkInfo: PayU3DS2.PayU3DS2SDKInfo
  @objc public var deviceChannel: Swift.String, threeDSVersion: Swift.String
  @objc public init(sdkInfo: PayU3DS2.PayU3DS2SDKInfo, deviceChannel: Swift.String, threeDSVersion: Swift.String)
  @objc deinit
  public func encode(to encoder: any Swift.Encoder) throws
  required public init(from decoder: any Swift.Decoder) throws
}
@objc public class PayU3DS2SDKInfo : ObjectiveC.NSObject, Swift.Codable {
  @objc public var sdkEncData: Swift.String, sdkAppID: Swift.String, sdkReferenceNumber: Swift.String, sdkTransID: Swift.String
  @objc public var sdkMaxTimeout: Swift.String
  @objc public var deviceRenderOptions: PayU3DS2.PayU3DS2DeviceRenderOptions
  @objc public var sdkEphemPubKey: PayU3DS2.PayU3DS2SDKEphemPubKey
  @objc public init(sdkEncData: Swift.String, sdkAppID: Swift.String, sdkReferenceNumber: Swift.String, sdkTransID: Swift.String, sdkMaxTimeout: Swift.String, deviceRenderOptions: PayU3DS2.PayU3DS2DeviceRenderOptions, sdkEphemPubKey: PayU3DS2.PayU3DS2SDKEphemPubKey)
  @objc deinit
  public func encode(to encoder: any Swift.Encoder) throws
  required public init(from decoder: any Swift.Decoder) throws
}
@objc public class PayU3DS2DeviceRenderOptions : ObjectiveC.NSObject, Swift.Codable {
  @objc public var sdkInterface: Swift.String
  @objc public var sdkUIType: [Swift.String]
  @objc public init(sdkInterface: Swift.String, sdkUIType: [Swift.String])
  @objc deinit
  public func encode(to encoder: any Swift.Encoder) throws
  required public init(from decoder: any Swift.Decoder) throws
}
@objc public class PayU3DS2SDKEphemPubKey : ObjectiveC.NSObject, Swift.Codable {
  @objc public var crv: Swift.String, kty: Swift.String, x: Swift.String, y: Swift.String
  @objc public init(crv: Swift.String, kty: Swift.String, x: Swift.String, y: Swift.String)
  @objc deinit
  public func encode(to encoder: any Swift.Encoder) throws
  required public init(from decoder: any Swift.Decoder) throws
}
extension PayU3DS2.PayU3DS2ButtonTextCaseType : Swift.Equatable {}
extension PayU3DS2.PayU3DS2ButtonTextCaseType : Swift.Hashable {}
extension PayU3DS2.PayU3DS2ButtonTextCaseType : Swift.RawRepresentable {}
extension PayU3DS2.PayU3DS2DeviceSeverity : Swift.Equatable {}
extension PayU3DS2.PayU3DS2DeviceSeverity : Swift.Hashable {}
extension PayU3DS2.PayU3DS2DeviceSeverity : Swift.RawRepresentable {}
extension PayU3DS2.PayU3DS2CardScheme : Swift.Equatable {}
extension PayU3DS2.PayU3DS2CardScheme : Swift.Hashable {}
extension PayU3DS2.PayU3DS2CardScheme : Swift.RawRepresentable {}
